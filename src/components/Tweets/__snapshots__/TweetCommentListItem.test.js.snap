// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class TweetCommentListItem extends _react2.default.Component {
  constructor(props) {
    super(props);
    this.state = { body: this.props.comment.body };
    this.editCommentBody = this.editCommentBody.bind(this);
    this.deleteComment = this.deleteComment.bind(this);
    this.formatDatetime = this.formatDatetime.bind(this);
  }

  formatDatetime(dt) {
    let dateTime = new Date(dt).toDateString() + ' ' +
    new Date(dt).toLocaleTimeString();

    return dateTime;
  }

  editCommentBody(newBody) {
    const commentData = {
      body: newBody,
      user_id: this.props.comment.user_id,
      id: this.props.comment.id };


    return (0, _comments.editCommentAPI)(commentData).
    then(data => {
      this.setState({ body: data.body });
    }).catch(() => {
      this.props.displayMessage('There was an error updating the comment');
    });
  }

  deleteComment() {
    this.props.deleteComment(this.props.comment.id);
  }

  render() {
    const userPath = \`/users/\${this.props.comment.slug}\`;
    let editBox;

    if (this.props.loggedIn && this.props.comment.user_id === this.props.currentUser.id) {
      editBox = _react2.default.createElement(_.EditComment, { body: this.props.comment.body, editCommentBody: this.editCommentBody, deleteComment: this.deleteComment, __source: { fileName: _jsxFileName, lineNumber: 46 }, __self: this });
    }

    return (
      _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this },
        _react2.default.createElement('div', { className: 'inner_tweet_list_item tweet_comment_list_item', __source: { fileName: _jsxFileName, lineNumber: 51 }, __self: this },
          _react2.default.createElement('h5', { __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, _react2.default.createElement(_reactRouterDom.Link, { to: userPath, __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, '@', this.props.comment.username), ' ', _react2.default.createElement('small', { __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, _react2.default.createElement('span', { __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, 'on'), ' ', _react2.default.createElement('b', { __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, this.formatDatetime(this.props.comment.created_at)))),
          _react2.default.createElement('p', { className: 'tweet_body_text', __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this }, this.state.body)),

        _react2.default.createElement('div', { className: 'tweet_modal_buttons', __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this },
          editBox)));



  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TweetCommentListItem
    comment={
        Object {
            "body": "Hello",
            "id": 1,
            "user_id": 1,
          }
    }
    currentUser={
        Object {
            "all_tweet_count": 2,
            "followers": 1,
            "following": 1,
            "id": 1,
            "name": "Ryan",
            "retweet_count": 1,
            "slug": "rg",
            "token": "12345",
            "tweet_count": 1,
            "username": "RG",
          }
    }
    deleteComment={[Function]}
    loggedIn={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="inner_tweet_list_item tweet_comment_list_item"
>
          <h5>
                    <Link
                              replace={false}
                              to="/users/undefined"
                    >
                              @
                    </Link>
                     
                    <small>
                              <span>
                                        on
                              </span>
                               
                              <b>
                                        Invalid Date Invalid Date
                              </b>
                    </small>
          </h5>
          <p
                    className="tweet_body_text"
          >
                    Hello
          </p>
</div>,
        <div
          className="tweet_modal_buttons"
>
          <EditComment
                    body="Hello"
                    deleteComment={[Function]}
                    editCommentBody={[Function]}
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h5>
              <Link
                            replace={false}
                            to="/users/undefined"
              >
                            @
              </Link>
               
              <small>
                            <span>
                                          on
                            </span>
                             
                            <b>
                                          Invalid Date Invalid Date
                            </b>
              </small>
</h5>,
            <p
              className="tweet_body_text"
>
              Hello
</p>,
          ],
          "className": "inner_tweet_list_item tweet_comment_list_item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  replace={false}
                  to="/users/undefined"
>
                  @
</Link>,
                " ",
                <small>
                  <span>
                                    on
                  </span>
                   
                  <b>
                                    Invalid Date Invalid Date
                  </b>
</small>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "@",
                    undefined,
                  ],
                  "replace": false,
                  "to": "/users/undefined",
                },
                "ref": null,
                "rendered": Array [
                  "@",
                  undefined,
                ],
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      on
</span>,
                    " ",
                    <b>
                      Invalid Date Invalid Date
</b>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "on",
                    },
                    "ref": null,
                    "rendered": "on",
                    "type": "span",
                  },
                  " ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Invalid Date Invalid Date",
                    },
                    "ref": null,
                    "rendered": "Invalid Date Invalid Date",
                    "type": "b",
                  },
                ],
                "type": "small",
              },
            ],
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello",
              "className": "tweet_body_text",
            },
            "ref": null,
            "rendered": "Hello",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <EditComment
            body="Hello"
            deleteComment={[Function]}
            editCommentBody={[Function]}
/>,
          "className": "tweet_modal_buttons",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "body": "Hello",
            "deleteComment": [Function],
            "editCommentBody": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="inner_tweet_list_item tweet_comment_list_item"
>
            <h5>
                        <Link
                                    replace={false}
                                    to="/users/undefined"
                        >
                                    @
                        </Link>
                         
                        <small>
                                    <span>
                                                on
                                    </span>
                                     
                                    <b>
                                                Invalid Date Invalid Date
                                    </b>
                        </small>
            </h5>
            <p
                        className="tweet_body_text"
            >
                        Hello
            </p>
</div>,
          <div
            className="tweet_modal_buttons"
>
            <EditComment
                        body="Hello"
                        deleteComment={[Function]}
                        editCommentBody={[Function]}
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h5>
                <Link
                                replace={false}
                                to="/users/undefined"
                >
                                @
                </Link>
                 
                <small>
                                <span>
                                                on
                                </span>
                                 
                                <b>
                                                Invalid Date Invalid Date
                                </b>
                </small>
</h5>,
              <p
                className="tweet_body_text"
>
                Hello
</p>,
            ],
            "className": "inner_tweet_list_item tweet_comment_list_item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    replace={false}
                    to="/users/undefined"
>
                    @
</Link>,
                  " ",
                  <small>
                    <span>
                                        on
                    </span>
                     
                    <b>
                                        Invalid Date Invalid Date
                    </b>
</small>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "@",
                      undefined,
                    ],
                    "replace": false,
                    "to": "/users/undefined",
                  },
                  "ref": null,
                  "rendered": Array [
                    "@",
                    undefined,
                  ],
                  "type": [Function],
                },
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        on
</span>,
                      " ",
                      <b>
                        Invalid Date Invalid Date
</b>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "on",
                      },
                      "ref": null,
                      "rendered": "on",
                      "type": "span",
                    },
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Invalid Date Invalid Date",
                      },
                      "ref": null,
                      "rendered": "Invalid Date Invalid Date",
                      "type": "b",
                    },
                  ],
                  "type": "small",
                },
              ],
              "type": "h5",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hello",
                "className": "tweet_body_text",
              },
              "ref": null,
              "rendered": "Hello",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <EditComment
              body="Hello"
              deleteComment={[Function]}
              editCommentBody={[Function]}
/>,
            "className": "tweet_modal_buttons",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "body": "Hello",
              "deleteComment": [Function],
              "editCommentBody": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
