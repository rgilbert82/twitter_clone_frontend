// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class NewTweetForm extends _react2.default.Component {
  constructor(props) {
    super(props);
    this.state = { tweetCreated: false, tweetBody: '' };
    this.updateBody = this.updateBody.bind(this);
    this.isValidForm = this.isValidForm.bind(this);
    this.createTweet = this.createTweet.bind(this);
    this.uploadPhotoBeforeCreatingTweet = this.uploadPhotoBeforeCreatingTweet.bind(this);
  }

  updateBody(e) {
    this.setState({ tweetBody: e.target.value });
  }

  isValidForm() {
    return this.state.tweetBody.trim().length > 0;
  }

  createTweet(photoPath) {
    return (0, _tweets.createTweetAPI)({ body: this.state.tweetBody, user_id: this.props.currentUser.id, image: photoPath }).
    then(() => {
      this.props.toggleTweetForm();
      this.props.raiseSidebarTweetCount();
    }).catch(() => {
      this.props.displayMessage('There was an error creating the tweet');
    });
  }

  uploadPhotoBeforeCreatingTweet() {
    return (0, _aws.uploadPhoto)(this.props.currentUser.id).
    then(photoPath => {
      this.createTweet(photoPath);
    }).catch(err => {
      this.props.displayMessage('There was an error uploading your image');
    });
  }

  render() {
    let component;

    if (this.state.tweetCreated) {
      component = _react2.default.createElement(_reactRouterDom.Redirect, { to: '/', __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this });
    } else {
      component =
      _react2.default.createElement('div', { id: 'modal_wrapper', __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this },
        _react2.default.createElement(_Misc.DarkLayer, { closeModal: this.props.toggleTweetForm, __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this }),
        _react2.default.createElement('div', { id: 'new_tweet_form', __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this },
          _react2.default.createElement('div', { className: 'modal_header', __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this },
            _react2.default.createElement('h1', { __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: this }, 'Compose new Tweet')),

          _react2.default.createElement('div', { className: 'modal_body', __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: this },
            _react2.default.createElement(_reactBootstrap.FormGroup, { __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: this },
              _react2.default.createElement(_reactBootstrap.FormControl, { componentClass: 'textarea', id: 'form_body', maxLength: '140', value: this.state.tweetBody, onChange: this.updateBody, placeholder: 'What\\'s happening?', __source: { fileName: _jsxFileName, lineNumber: 60 }, __self: this })),

            _react2.default.createElement(_reactBootstrap.FormGroup, { __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: this },
              _react2.default.createElement(_reactBootstrap.ControlLabel, { htmlFor: 'photo_upload', __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this }, 'Add an image'),
              _react2.default.createElement(_reactBootstrap.FormControl, { type: 'file', id: 'photo_upload', __source: { fileName: _jsxFileName, lineNumber: 64 }, __self: this })),

            _react2.default.createElement(_reactBootstrap.Button, { id: 'toggleForm', onClick: this.props.toggleTweetForm, __source: { fileName: _jsxFileName, lineNumber: 66 }, __self: this }, 'Cancel'),
            _react2.default.createElement(_reactBootstrap.Button, { id: 'submitForm', disabled: !this.isValidForm(), onClick: this.uploadPhotoBeforeCreatingTweet, __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this }, 'Tweet'))));




    }

    return component;
  }} renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewTweetForm
    currentUser={
        Object {
            "all_tweet_count": 2,
            "followers": 1,
            "following": 1,
            "id": 1,
            "name": "Ryan",
            "retweet_count": 1,
            "slug": "rg",
            "token": "12345",
            "tweet_count": 1,
            "username": "RG",
          }
    }
    displayMessage={[Function]}
    toggleTweetForm={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <DarkLayer
          closeModal={[Function]}
/>,
        <div
          id="new_tweet_form"
>
          <div
                    className="modal_header"
          >
                    <h1>
                              Compose new Tweet
                    </h1>
          </div>
          <div
                    className="modal_body"
          >
                    <FormGroup
                              bsClass="form-group"
                    >
                              <FormControl
                                        bsClass="form-control"
                                        componentClass="textarea"
                                        id="form_body"
                                        maxLength="140"
                                        onChange={[Function]}
                                        placeholder="What's happening?"
                                        value=""
                              />
                    </FormGroup>
                    <FormGroup
                              bsClass="form-group"
                    >
                              <ControlLabel
                                        bsClass="control-label"
                                        htmlFor="photo_upload"
                                        srOnly={false}
                              >
                                        Add an image
                              </ControlLabel>
                              <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        id="photo_upload"
                                        type="file"
                              />
                    </FormGroup>
                    <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              disabled={false}
                              id="toggleForm"
                              onClick={[Function]}
                    >
                              Cancel
                    </Button>
                    <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              disabled={true}
                              id="submitForm"
                              onClick={[Function]}
                    >
                              Tweet
                    </Button>
          </div>
</div>,
      ],
      "id": "modal_wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "closeModal": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="modal_header"
>
              <h1>
                            Compose new Tweet
              </h1>
</div>,
            <div
              className="modal_body"
>
              <FormGroup
                            bsClass="form-group"
              >
                            <FormControl
                                          bsClass="form-control"
                                          componentClass="textarea"
                                          id="form_body"
                                          maxLength="140"
                                          onChange={[Function]}
                                          placeholder="What's happening?"
                                          value=""
                            />
              </FormGroup>
              <FormGroup
                            bsClass="form-group"
              >
                            <ControlLabel
                                          bsClass="control-label"
                                          htmlFor="photo_upload"
                                          srOnly={false}
                            >
                                          Add an image
                            </ControlLabel>
                            <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          id="photo_upload"
                                          type="file"
                            />
              </FormGroup>
              <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                            id="toggleForm"
                            onClick={[Function]}
              >
                            Cancel
              </Button>
              <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={true}
                            id="submitForm"
                            onClick={[Function]}
              >
                            Tweet
              </Button>
</div>,
          ],
          "id": "new_tweet_form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1>
                Compose new Tweet
</h1>,
              "className": "modal_header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Compose new Tweet",
              },
              "ref": null,
              "rendered": "Compose new Tweet",
              "type": "h1",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <FormGroup
                  bsClass="form-group"
>
                  <FormControl
                                    bsClass="form-control"
                                    componentClass="textarea"
                                    id="form_body"
                                    maxLength="140"
                                    onChange={[Function]}
                                    placeholder="What's happening?"
                                    value=""
                  />
</FormGroup>,
                <FormGroup
                  bsClass="form-group"
>
                  <ControlLabel
                                    bsClass="control-label"
                                    htmlFor="photo_upload"
                                    srOnly={false}
                  >
                                    Add an image
                  </ControlLabel>
                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="photo_upload"
                                    type="file"
                  />
</FormGroup>,
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                  id="toggleForm"
                  onClick={[Function]}
>
                  Cancel
</Button>,
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={true}
                  id="submitForm"
                  onClick={[Function]}
>
                  Tweet
</Button>,
              ],
              "className": "modal_body",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": <FormControl
                    bsClass="form-control"
                    componentClass="textarea"
                    id="form_body"
                    maxLength="140"
                    onChange={[Function]}
                    placeholder="What's happening?"
                    value=""
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-control",
                    "componentClass": "textarea",
                    "id": "form_body",
                    "maxLength": "140",
                    "onChange": [Function],
                    "placeholder": "What's happening?",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": Array [
                    <ControlLabel
                      bsClass="control-label"
                      htmlFor="photo_upload"
                      srOnly={false}
>
                      Add an image
</ControlLabel>,
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      id="photo_upload"
                      type="file"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Add an image",
                      "htmlFor": "photo_upload",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Add an image",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control",
                      "componentClass": "input",
                      "id": "photo_upload",
                      "type": "file",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Cancel",
                  "disabled": false,
                  "id": "toggleForm",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Tweet",
                  "disabled": true,
                  "id": "submitForm",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Tweet",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <DarkLayer
            closeModal={[Function]}
/>,
          <div
            id="new_tweet_form"
>
            <div
                        className="modal_header"
            >
                        <h1>
                                    Compose new Tweet
                        </h1>
            </div>
            <div
                        className="modal_body"
            >
                        <FormGroup
                                    bsClass="form-group"
                        >
                                    <FormControl
                                                bsClass="form-control"
                                                componentClass="textarea"
                                                id="form_body"
                                                maxLength="140"
                                                onChange={[Function]}
                                                placeholder="What's happening?"
                                                value=""
                                    />
                        </FormGroup>
                        <FormGroup
                                    bsClass="form-group"
                        >
                                    <ControlLabel
                                                bsClass="control-label"
                                                htmlFor="photo_upload"
                                                srOnly={false}
                                    >
                                                Add an image
                                    </ControlLabel>
                                    <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                id="photo_upload"
                                                type="file"
                                    />
                        </FormGroup>
                        <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    disabled={false}
                                    id="toggleForm"
                                    onClick={[Function]}
                        >
                                    Cancel
                        </Button>
                        <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    disabled={true}
                                    id="submitForm"
                                    onClick={[Function]}
                        >
                                    Tweet
                        </Button>
            </div>
</div>,
        ],
        "id": "modal_wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "closeModal": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="modal_header"
>
                <h1>
                                Compose new Tweet
                </h1>
</div>,
              <div
                className="modal_body"
>
                <FormGroup
                                bsClass="form-group"
                >
                                <FormControl
                                                bsClass="form-control"
                                                componentClass="textarea"
                                                id="form_body"
                                                maxLength="140"
                                                onChange={[Function]}
                                                placeholder="What's happening?"
                                                value=""
                                />
                </FormGroup>
                <FormGroup
                                bsClass="form-group"
                >
                                <ControlLabel
                                                bsClass="control-label"
                                                htmlFor="photo_upload"
                                                srOnly={false}
                                >
                                                Add an image
                                </ControlLabel>
                                <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                id="photo_upload"
                                                type="file"
                                />
                </FormGroup>
                <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                disabled={false}
                                id="toggleForm"
                                onClick={[Function]}
                >
                                Cancel
                </Button>
                <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                disabled={true}
                                id="submitForm"
                                onClick={[Function]}
                >
                                Tweet
                </Button>
</div>,
            ],
            "id": "new_tweet_form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  Compose new Tweet
</h1>,
                "className": "modal_header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Compose new Tweet",
                },
                "ref": null,
                "rendered": "Compose new Tweet",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <FormGroup
                    bsClass="form-group"
>
                    <FormControl
                                        bsClass="form-control"
                                        componentClass="textarea"
                                        id="form_body"
                                        maxLength="140"
                                        onChange={[Function]}
                                        placeholder="What's happening?"
                                        value=""
                    />
</FormGroup>,
                  <FormGroup
                    bsClass="form-group"
>
                    <ControlLabel
                                        bsClass="control-label"
                                        htmlFor="photo_upload"
                                        srOnly={false}
                    >
                                        Add an image
                    </ControlLabel>
                    <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        id="photo_upload"
                                        type="file"
                    />
</FormGroup>,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    id="toggleForm"
                    onClick={[Function]}
>
                    Cancel
</Button>,
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={true}
                    id="submitForm"
                    onClick={[Function]}
>
                    Tweet
</Button>,
                ],
                "className": "modal_body",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": <FormControl
                      bsClass="form-control"
                      componentClass="textarea"
                      id="form_body"
                      maxLength="140"
                      onChange={[Function]}
                      placeholder="What's happening?"
                      value=""
/>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "form-control",
                      "componentClass": "textarea",
                      "id": "form_body",
                      "maxLength": "140",
                      "onChange": [Function],
                      "placeholder": "What's happening?",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <ControlLabel
                        bsClass="control-label"
                        htmlFor="photo_upload"
                        srOnly={false}
>
                        Add an image
</ControlLabel>,
                      <FormControl
                        bsClass="form-control"
                        componentClass="input"
                        id="photo_upload"
                        type="file"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Add an image",
                        "htmlFor": "photo_upload",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Add an image",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-control",
                        "componentClass": "input",
                        "id": "photo_upload",
                        "type": "file",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "default",
                    "children": "Cancel",
                    "disabled": false,
                    "id": "toggleForm",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "active": false,
                    "block": false,
                    "bsClass": "btn",
                    "bsStyle": "default",
                    "children": "Tweet",
                    "disabled": true,
                    "id": "submitForm",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Tweet",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
